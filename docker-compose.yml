version: '3.8'

services:
  ######################### Nginx proxy #########################
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html
      - /etc/nginx/certs
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx-proxy/my_max_size.conf:/etc/nginx/conf.d/my_max_size.conf:ro
    networks:
      - moofy-network

  acme-companion:
    image: nginxproxy/acme-companion
    container_name: acme-companion
    volumes_from:
      - "nginx-proxy"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/acme.sh
    environment:
      - DEFAULT_EMAIL=${LETSENCRYPT_EMAIL}
      - NGINX_PROXY_CONTAINER=nginx-proxy
    depends_on:
      - nginx-proxy

  ######################## Frontend #########################
  frontend-prod:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: frontend-prod
    restart: unless-stopped
    environment:
      - VIRTUAL_HOST=moofy.ru
      - LETSENCRYPT_HOST=moofy.ru
    networks:
      - moofy-network

  # frontend-test:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile.test
  #   container_name: frontend-test
  #   restart: unless-stopped
  #   environment:
  #     - VIRTUAL_HOST=test1.moofy.ru
  #     - LETSENCRYPT_HOST=test1.moofy.ru
  #   networks:
  #     - moofy-test-network

  ######################### Backend #########################

  backend-prod:
    image: moofy-backend
    restart: unless-stopped
    container_name: backend-prod
    build:
      context: ./backend
      dockerfile: ./Dockerfile.prod
    depends_on:
      - redis-db
    networks:
      - moofy-network

  nginx-backend:
    build:
      context: ./nginx-backend
      dockerfile: Dockerfile
    container_name: nginx-backend
    restart: unless-stopped
    environment:
      - VIRTUAL_HOST=api.moofy.ru
      - VIRTUAL_PORT=4444
      - LETSENCRYPT_HOST=api.moofy.ru
    depends_on:
      - backend-prod
    networks:
      - moofy-network

  # backend-test:
  #   image: moofy-backend-test
  #   restart: unless-stopped
  #   container_name: backend-test
  #   build:
  #     context: ./backend
  #     dockerfile: ./Dockerfile.test
  #   depends_on:
  #     - redis-test-db
  #     - postgres-test-db
  #   environment:
  #     - VIRTUAL_HOST=api.test1.moofy.ru
  #     - LETSENCRYPT_HOST=api.test1.moofy.ru
  #   networks:
  #     - moofy-test-network

  ######################### For backend #########################

  redis-db:
    image: redis:7.0.5-alpine
    restart: unless-stopped
    command: "redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}"
    volumes:
      - redis-db:/data
    networks:
      - moofy-network

  # redis-test-db:
  #   image: redis:7.0.5-alpine
  #   restart: unless-stopped
  #   command: "redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_TEST_PASSWORD}"
  #   volumes:
  #     - redis-db:/data
  #   networks:
  #     - moofy-test-network

  # postgres-test-db:
  #   image: postgres
  #   restart: unless-stopped
  #   container_name: postgres-test-db
  #   environment:
  #     POSTGRES_USER: "${POSTGRES_TEST_USER}"
  #     POSTGRES_PASSWORD: "${POSTGRES_TEST_PASSWORD}"
  #   networks:
  #     - moofy-test-network

volumes:
  redis-db:
    driver: local
  test-redis-db:
    driver: local

networks:
  moofy-network:
    driver: bridge
  moofy-test-network:
    driver: bridge
