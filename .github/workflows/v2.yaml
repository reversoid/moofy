name: moofy-v2
run-name: Deploy v2
on:
  push:
    branches:
      - "v2"
      # TODO add workflow_dispatch when merged to main
jobs:
  migrate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .env file
        run: |
          touch .env

          echo DATABASE_URL=postgresql://${{ secrets.POSTGRES_TEST_USER }}:${{ secrets.POSTGRES_TEST_PASSWORD }}@${{ secrets.POSTGRES_TEST_HOST }}:${{ secrets.POSTGRES_TEST_PORT }}/${{ secrets.POSTGRES_TEST_DB_NAME }} >> .env

      - name: Run migrations
        run: |
          docker run --rm -v "$(pwd)/db:/db" --env-file .env ghcr.io/amacneil/dbmate up

  deploy:
    needs: migrate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Setup .env file
        run: |
          touch .env

          echo ENV=production >> .env

          echo COOKIE_SECRET=${{ secrets.COOKIE_SECRET }} >> .env

          echo UNOFFICIAL_KP_API_KEYS=${{ secrets.UNOFFICIAL_KP_API_KEYS }} >> .env

          echo PG_USER=${{ secrets.POSTGRES_TEST_USER }} >> .env
          echo PG_PASSWORD=${{ secrets.POSTGRES_TEST_PASSWORD }} >> .env
          echo PG_HOST=${{ secrets.POSTGRES_TEST_HOST }} >> .env
          echo PG_PORT=${{ secrets.POSTGRES_TEST_PORT }} >> .env
          echo PG_MAX_CONNECTIONS=10 >> .env
          echo PG_DATABASE=${{ secrets.POSTGRES_TEST_USER }} >> .env
          echo DATABASE_URL=postgresql://${{ secrets.POSTGRES_TEST_USER }}:${{ secrets.POSTGRES_TEST_PASSWORD }}@${{ secrets.POSTGRES_TEST_HOST }}:${{ secrets.POSTGRES_TEST_PORT }}/${{ secrets.POSTGRES_TEST_USER }} >> .env

          echo S3_ACCESS_KEY_ID=${{ secrets.S3_KEY_ID }} >> .env
          echo S3_SECRET_ACCESS_KEY=${{ secrets.S3_KEY_SECRET }} >> .env
          echo S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }} >> .env

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_SSH_KEY}}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.VPS_IP }} >> ~/.ssh/known_hosts

      - name: Set up Docker context
        run: |
          docker context create moofy-server --docker "host=ssh://${{secrets.VPS_USERNAME}}@${{secrets.VPS_IP}}"
          docker context use moofy-server

      - name: Compose test docker
        run: docker --context moofy-server compose --env-file .env -f deploy/docker-compose.yml up --build -d
